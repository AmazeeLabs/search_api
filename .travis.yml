language: php
cache:
  bundler: true
  directories:
    - $HOME/tmp/drush
    - $HOME/.bundle
  apt: true

php:
  - 5.4
  - 5.5

notifications:
  email:
    - nick.veenhof@acquia.com
    - remus@gmx.net
  irc:
    - "chat.freenode.net#drupal-search-api"

env:
  - PATH=$PATH:/home/travis/.composer/vendor/bin

# This will create the database
mysql:
  database: drupal
  username: root
  encoding: utf8

# To be able to run a webbrowser
# If we need anything more powerful
# than e.g. phantomjs
before_install:
  - "export DISPLAY=:99.0"
  - "sh -e /etc/init.d/xvfb start"

install:
  # Grab Drush
  - composer global require drush/drush:dev-master --prefer-source
  - cd /home/travis/.composer/vendor/drush/drush && cd -
  # Make sure we don't fail when checking out projects
  - echo -e "Host github.com\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config
  # LAMP package installation (mysql is already started)
  - sudo apt-get install -y --force-yes apache2 libapache2-mod-php5 php5-mysql php5-curl
  # Apache webserver configuration
  - sudo sed -i -e "s,/var/www,$TRAVIS_BUILD_DIR/../drupal,g" /etc/apache2/sites-available/default
  - sudo a2enmod rewrite
  - sudo a2enmod actions
  - sudo service apache2 restart
  # Re-enable when trying to get CodeSniffer doesn't return a 403 anymore.
  #- composer global require drupal/coder:\>7

before_script:
  # Set sendmail so drush doesn't throw an error during site install.
  - echo "sendmail_path='true'" >> `php --ini | grep "Loaded Configuration" | awk '{print $4}'`
  - echo "error_log=syslog" >> `php --ini | grep "Loaded Configuration" | awk '{print $4}'`
  # Move one up
  - cd ..
  # Get latest drupal 8 core
  - git clone --depth 1 --branch 8.x http://git.drupal.org/project/drupal.git
  - chmod go-w $TRAVIS_BUILD_DIR/../drupal/sites/default
  - cd drupal
  # Install the site
  - drush -v site-install standard --db-url=mysql://root:@localhost/drupal --yes
  - drush en --yes simpletest
  - drush cr
  - sleep 4
  - phpenv rehash

script:
  # go to our Drupal module directory
  - mkdir $TRAVIS_BUILD_DIR/../drupal/modules/search_api
  - cp -R $TRAVIS_BUILD_DIR/* $TRAVIS_BUILD_DIR/../drupal/modules/search_api/
  # go to our Drupal main directory
  - cd $TRAVIS_BUILD_DIR/../drupal
  # Run the tests
  - php core/scripts/run-tests.sh --module 'search_api' --color --concurrency 4 --php `which php` --url http://localhost | tee /tmp/test.txt
  - TEST_EXIT=${PIPESTATUS[0]}
  # Check if we had fails in the run-tests.sh script
  # Exit with the inverted value, because if there are no fails found, it will exit with 1 and for us that\
  # is a good thing so invert it to 0. Travis has some issues with the exclamation mark in front so we have to fiddle a
  # bit.
  # Also make the grep case insensitive and fail on run-tests.sh regular fails as well on fatal errors.
  - TEST_OUTPUT=$(! egrep -i "([0-9]+ fails)|(PHP Fatal error)|([0-9]+ exceptions)" /tmp/test.txt > /dev/null)$?
  # if the TEST_EXIT status is 0 AND the TEST_OUTPUT status is also 0 it means we succeeded, in all other cases we
  # failed.
  # Re-enable when trying to get CodeSniffer doesn't return a 403 anymore.
  #- /home/travis/.composer/vendor/bin/phpcs --standard=/home/travis/.composer/vendor/drupal/coder/coder_sniffer/Drupal --extensions=php,inc,test,module,install --ignore=css/ $TRAVIS_BUILD_DIR/../drupal/modules/search_api
  - php -i | grep 'php.ini'
  - sudo cat /var/log/apache2/error.log
  - sudo cat /var/log/syslog | grep 'php'
  # Exit the build
  - if [ $TEST_EXIT -eq 0 ] && [ $TEST_OUTPUT -eq 0 ] ; then exit 0; else exit 1; fi
